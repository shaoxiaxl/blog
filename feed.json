{
    "version": "https://jsonfeed.org/version/1",
    "title": "少侠的记事本",
    "description": "",
    "home_page_url": "https://shaoxiaxl.github.io/blog",
    "feed_url": "https://shaoxiaxl.github.io/blog/feed.json",
    "user_comment": "",
    "author": {
        "name": "ShaoXia"
    },
    "items": [
        {
            "id": "https://shaoxiaxl.github.io/blog/css-chang-yong-shu-xing.html",
            "url": "https://shaoxiaxl.github.io/blog/css-chang-yong-shu-xing.html",
            "title": "CSS常用属性",
            "summary": "1. 选择器元素类型h1 {}类 类型.class {}ID选择器#id {}指向特定元素的类或者IDh1.class {}h1#id {}标签选择器a[title] {} 或者特定值a[herf=&#39;http://baidu.con&#39;] {}运算符article &gt; p {}2. 布局displayblockinlinegridflexinline-blockpositiontable关注table-layout:fixedfloat其他的周围内容会在这个被浮动的元素周围环绕3. 调整大小 min- max-width:100%图片拉伸到与容器相同的宽度max-width:100% 不会大于原始尺寸object-fit:cover 缩小图像，维持了图像的比例object-fit:contain 图像将缩放到足以放到盒子里的大小4. 溢出的内容overflowvisiblehiddenscrollautiooverflow-y:scroll y轴方向滚动overflow-x: x轴方向的滚动5. 背景background-colorbackground-imager:url()background-repeat 是否平铺图片 no-repeatbackground-sizecover 浏览器将使图像足够大，使他完全覆盖了盒子区。contain 浏览器将使图像的大小适合盒子内background-postion 背景定位background-postion: top 10% right 10pxbackground-attachment 背景页面滚动scroll 元素的背景在页面滚动时候滚动fixed 使元素的背景固定在视图端口上6. 边框borderborder: 1px solid blackborder-radius 边框圆角7.伪类和伪元素:frist-child用户行为的伪类:hover:focus伪元素::frist-line::before和::after8. css继承inherit 开启继承initial 设置属性值和浏览器默认样式相同。unset&hellip;",
            "content_html": "<h2 id=\"1-选择器\">1. 选择器</h2>\n<ul>\n<li>元素类型\n<code>h1 {}</code></li>\n<li>类 类型\n<code>.class {}</code></li>\n<li>ID选择器\n<code>#id {}</code></li>\n<li>指向特定元素的类或者ID\n<code>h1.class {}\nh1#id {}</code></li>\n<li>标签选择器\n<code>a[title] {}</code> 或者特定值<code>a[herf=&#39;http://baidu.con&#39;] {}</code></li>\n<li>运算符\n<code>article &gt; p {}</code></li>\n</ul>\n<h2 id=\"2-布局\">2. 布局</h2>\n<ul>\n<li><h3 id=\"display\">display</h3>\n<ul>\n<li>block</li>\n<li>inline</li>\n<li>grid</li>\n<li>flex</li>\n<li>inline-block</li>\n</ul>\n</li>\n<li><h3 id=\"position\">position</h3>\n</li>\n<li><h3 id=\"table\">table</h3>\n<ul>\n<li>关注<code>table-layout:fixed</code></li>\n</ul>\n</li>\n<li><h3 id=\"float\">float</h3>\n<ul>\n<li>其他的周围内容会在这个被浮动的元素周围环绕</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"3-调整大小-min--max-\">3. 调整大小 min- max-</h2>\n<ul>\n<li><h3 id=\"width100图片拉伸到与容器相同的宽度\"><code>width:100%</code>图片拉伸到与容器相同的宽度</h3>\n</li>\n<li><h3 id=\"max-width100-不会大于原始尺寸\"><code>max-width:100%</code> 不会大于原始尺寸</h3>\n</li>\n<li><h3 id=\"object-fitcover-缩小图像，维持了图像的比例\"><code>object-fit:cover</code> 缩小图像，维持了图像的比例</h3>\n</li>\n<li><h3 id=\"object-fitcontain-图像将缩放到足以放到盒子里的大小\"><code>object-fit:contain</code> 图像将缩放到足以放到盒子里的大小</h3>\n</li>\n</ul>\n<h2 id=\"4-溢出的内容\">4. 溢出的内容</h2>\n<ul>\n<li><h3 id=\"overflow\">overflow</h3>\n<ul>\n<li>visible</li>\n<li>hidden</li>\n<li>scroll</li>\n<li>autio</li>\n</ul>\n</li>\n<li><h3 id=\"overflow-yscroll-y轴方向滚动\">overflow-y:scroll y轴方向滚动</h3>\n</li>\n<li><h3 id=\"overflow-x-x轴方向的滚动\">overflow-x: x轴方向的滚动</h3>\n</li>\n</ul>\n<h2 id=\"5-背景\">5. 背景</h2>\n<ul>\n<li><h3 id=\"background-color\">background-color</h3>\n</li>\n<li><h3 id=\"background-imagerurl\">background-imager:url()</h3>\n</li>\n<li><h3 id=\"background-repeat-是否平铺图片-no-repeat\">background-repeat 是否平铺图片 no-repeat</h3>\n</li>\n<li><h3 id=\"background-size\">background-size</h3>\n<ul>\n<li>cover 浏览器将使图像足够大，使他完全覆盖了盒子区。</li>\n<li>contain 浏览器将使图像的大小适合盒子内</li>\n</ul>\n</li>\n<li><h3 id=\"background-postion-背景定位\">background-postion 背景定位</h3>\n<ul>\n<li><code>background-postion: top 10% right 10px</code></li>\n</ul>\n</li>\n<li><h3 id=\"background-attachment-背景页面滚动\">background-attachment 背景页面滚动</h3>\n<ul>\n<li>scroll 元素的背景在页面滚动时候滚动</li>\n<li>fixed 使元素的背景固定在视图端口上</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"6-边框\">6. 边框</h2>\n<ul>\n<li><h3 id=\"border\">border</h3>\n<ul>\n<li><code>border: 1px solid black</code></li>\n</ul>\n</li>\n<li><h3 id=\"border-radius-边框圆角\">border-radius 边框圆角</h3>\n</li>\n</ul>\n<h2 id=\"7伪类和伪元素\">7.伪类和伪元素</h2>\n<ul>\n<li>:frist-child</li>\n<li>用户行为的伪类<ul>\n<li>:hover</li>\n<li>:focus</li>\n</ul>\n</li>\n<li>伪元素<ul>\n<li>::frist-line</li>\n</ul>\n</li>\n<li>::before和::after</li>\n</ul>\n<h2 id=\"8-css继承\">8. css继承</h2>\n<ul>\n<li>inherit 开启继承</li>\n<li>initial 设置属性值和浏览器默认样式相同。</li>\n<li>unset 将属性重置为自然值，如果是自然继承那么就是inherit,否则是initial</li>\n<li>!important 优先</li>\n<li>内联&gt; id选择器&gt; 类选择器&gt; 元素选择器伪元素选择器</li>\n</ul>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/Reference\">参考大全</a></p>\n",
            "author": {
                "name": "ShaoXia"
            },
            "tags": [
            ],
            "date_published": "2020-11-19T22:48:46+08:00",
            "date_modified": "2020-11-20T22:00:11+08:00"
        },
        {
            "id": "https://shaoxiaxl.github.io/blog/ri-chang-yong-de-lian-jie.html",
            "url": "https://shaoxiaxl.github.io/blog/ri-chang-yong-de-lian-jie.html",
            "title": "日常用的链接",
            "summary": "优秀的产品Product Hunt每天都会发布最好的新产品。 ",
            "content_html": "<p><a href=\"https://www.producthunt.com/\">优秀的产品</a>Product Hunt每天都会发布最好的新产品。</p>\n<p> </p>",
            "author": {
                "name": "ShaoXia"
            },
            "tags": [
            ],
            "date_published": "2020-11-10T14:34:16+08:00",
            "date_modified": "2020-11-10T14:34:16+08:00"
        },
        {
            "id": "https://shaoxiaxl.github.io/blog/ubuntu-xi-tong-you-hua.html",
            "url": "https://shaoxiaxl.github.io/blog/ubuntu-xi-tong-you-hua.html",
            "title": "ubuntu系统优化!",
            "summary": "完整的/etc/sysctl.conf修改添加内容如下：在/etc/sysctl.conf中添加如下内容 # 网络参数优化开始net.ipv4.tcp_max_syn_backlog = 65536net.core.netdev_max_backlog = 32768net.core.somaxconn = 32768net.core.wmem_default = 8388608net.core.rmem_default = 8388608net.core.rmem_max = 16777216net.core.wmem_max = 16777216net.ipv4.tcp_timestamps = 0net.ipv4.tcp_synack_retries = 2net.ipv4.tcp_syn_retries = 2net.ipv4.tcp_tw_recycle = 1#net.ipv4.tcp_tw_len = 1net.ipv4.tcp_tw_reuse = 1net.ipv4.tcp_mem = 94500000 915000000 927000000net.ipv4.tcp_max_orphans = 3276800#net.ipv4.tcp_fin_timeout = 30#net.ipv4.tcp_keepalive_time = 120net.ipv4.ip_local_port_range = 1024 65535#网络参数优化结束#系统共享内存大小优化开始kernel.shmmax = 134217728#系统共享内存大小优化结束#添加内容结束修改完成后运行以下命令使参数生效 /sbin/sysctl&hellip;",
            "content_html": "<p>完整的/etc/sysctl.conf修改添加内容如下：\n在/etc/sysctl.conf中添加如下内容</p>\n<pre><code class=\"language-shell\"># 网络参数优化开始\nnet.ipv4.tcp_max_syn_backlog = 65536\nnet.core.netdev_max_backlog =  32768\nnet.core.somaxconn = 32768\n\nnet.core.wmem_default = 8388608\nnet.core.rmem_default = 8388608\nnet.core.rmem_max = 16777216\nnet.core.wmem_max = 16777216\n\nnet.ipv4.tcp_timestamps = 0\nnet.ipv4.tcp_synack_retries = 2\nnet.ipv4.tcp_syn_retries = 2\n\nnet.ipv4.tcp_tw_recycle = 1\n#net.ipv4.tcp_tw_len = 1\nnet.ipv4.tcp_tw_reuse = 1\n\nnet.ipv4.tcp_mem = 94500000 915000000 927000000\nnet.ipv4.tcp_max_orphans = 3276800\n\n#net.ipv4.tcp_fin_timeout = 30\n#net.ipv4.tcp_keepalive_time = 120\nnet.ipv4.ip_local_port_range = 1024  65535\n#网络参数优化结束\n#系统共享内存大小优化开始\nkernel.shmmax = 134217728\n#系统共享内存大小优化结束\n#添加内容结束</code></pre>\n<p>修改完成后运行以下命令使参数生效</p>\n<pre><code>/sbin/sysctl -p</code></pre><p>以上，如有不足，欢迎大家指正和追加，谢谢！</p>\n",
            "author": {
                "name": "ShaoXia"
            },
            "tags": [
                   "优化"
            ],
            "date_published": "2018-11-20T21:17:00+08:00",
            "date_modified": "2020-11-20T22:20:24+08:00"
        },
        {
            "id": "https://shaoxiaxl.github.io/blog/yonggdb-diao-shipython.html",
            "url": "https://shaoxiaxl.github.io/blog/yonggdb-diao-shipython.html",
            "title": "用gdb调试python!",
            "summary": "###用gdb调试python! 1，安装 apt-get install gdbgdb (GDB) 7.0以上才支持sudo apt-get install gdb python2.7-dbg2,常用命令 py-listpy-up and py-downpy-btpy-printpy-localsinfo threadsthread apply all py-btfinishcontinuer",
            "content_html": "<p>###用gdb调试python!</p>\n<p>1，安装</p>\n<pre><code>apt-get install gdb\ngdb (GDB) 7.0以上才支持\nsudo apt-get install gdb python2.7-dbg</code></pre><p>2,常用命令</p>\n<pre><code>py-list\npy-up and py-down\npy-bt\npy-print\npy-locals\ninfo threads\nthread apply all py-bt\nfinish\ncontinue\nr</code></pre>",
            "author": {
                "name": "ShaoXia"
            },
            "tags": [
                   "优化",
                   "python"
            ],
            "date_published": "2016-05-25T23:31:00+08:00",
            "date_modified": "2020-11-20T22:26:17+08:00"
        },
        {
            "id": "https://shaoxiaxl.github.io/blog/dan-jikubernetes-de-pei-zhi-he-an-zhuang.html",
            "url": "https://shaoxiaxl.github.io/blog/dan-jikubernetes-de-pei-zhi-he-an-zhuang.html",
            "title": "单机Kubernetes的配置和安装!",
            "summary": "单机Kubernetes的配置和安装 0，Docker 安装 1.3+ https://docs.docker.com/engine/installation/#installation 安装完成后运行 docker ps命令检查是否成功。 https://github.com/coreos/etcd/releases curl -L https://github.com/coreos/etcd/releases/download/v2.3.0-alpha.1/etcd-v2.3.0-alpha.1-linux-amd64.tar.gz -o etcd-v2.3.0-alpha.1-linux-amd64.tar.gz tar xzvf etcd-v2.3.0-alpha.1-linux-amd64.tar.gz cd etcd-v2.3.0-alpha.1-linux-amd64 cp etcd* /bin/ 安装成功后加入到环境变量里面去。运行 etcd命令。2, go 安装 1.3+https://golang.org/doc/install wget https://storage.googleapis.com/golang/go1.6.linux-amd64.tar.gz tar -C /usr/local -xzf go1.6.linux-amd64.tar.gz .profile: export PATH=$PATH:/usr/local/go/bin 然后使profile生效： source $HOME/.profile git clone https://github.com/kubernetes/kubernetes.git https://github.com/kubernetes/kubernetes/releases/download/v1.1.8/kubernetes.tar.gz cd&hellip;",
            "content_html": "<p>单机Kubernetes的配置和安装</p>\n<p>0，Docker 安装 1.3+</p>\n<pre><code>https://docs.docker.com/engine/installation/#installation </code></pre><p>安装完成后运行 docker ps命令检查是否成功。</p>\n<ul>\n<li>1,etcd 安装</li>\n</ul>\n<pre><code>https://github.com/coreos/etcd/releases \n\ncurl -L https://github.com/coreos/etcd/releases/download/v2.3.0-alpha.1/etcd-v2.3.0-alpha.1-linux-amd64.tar.gz -o etcd-v2.3.0-alpha.1-linux-amd64.tar.gz \n\ntar xzvf etcd-v2.3.0-alpha.1-linux-amd64.tar.gz \n\ncd etcd-v2.3.0-alpha.1-linux-amd64 cp etcd* /bin/ \n\n安装成功后加入到环境变量里面去。运行 etcd命令。\n</code></pre><ul>\n<li>2, go 安装 1.3+</li>\n</ul>\n<pre><code>https://golang.org/doc/install \n\nwget https://storage.googleapis.com/golang/go1.6.linux-amd64.tar.gz \n\ntar -C /usr/local -xzf go1.6.linux-amd64.tar.gz \n\n.profile: export PATH=$PATH:/usr/local/go/bin </code></pre><p>然后使profile生效： source $HOME/.profile</p>\n<ul>\n<li>3,kubernetes 安装</li>\n</ul>\n<pre><code>git clone https://github.com/kubernetes/kubernetes.git \n\nhttps://github.com/kubernetes/kubernetes/releases/download/v1.1.8/kubernetes.tar.gz \n\ncd kubernetes \n\nhack/local-up-cluster.sh \n\n开始出现错误\n\nmake clean\n\n然后出现 /pkg/tool/linux_amd64/6l: running gcc failed: Cannot allocate memory,内存不足。\n\n参考 关于阿里云ESC上go语言项目编译6l: running gcc failed: Cannot allocate memory\n\n一起完成后\n\n测试是否成功\n\ncluster/kubectl.sh get pods \n\ncluster/kubectl.sh get services </code></pre><blockquote>\n<p>参考：<a href=\"http://kubernetes.io/v1.1/docs/getting-started-guides/locally.html\">http://kubernetes.io/v1.1/docs/getting-started-guides/locally.html</a></p>\n</blockquote>\n",
            "author": {
                "name": "ShaoXia"
            },
            "tags": [
            ],
            "date_published": "2015-08-25T15:20:00+08:00",
            "date_modified": "2020-11-20T22:27:24+08:00"
        },
        {
            "id": "https://shaoxiaxl.github.io/blog/vim.html",
            "url": "https://shaoxiaxl.github.io/blog/vim.html",
            "title": "vim!",
            "summary": "项目地址: https://github.com/wklken/k-vim wklken同学的blog主页: http://wklken.me/ 克隆到本地 git clone https://github.com/wklken/k-vim.git 安装依赖 sudo apt-get install ctagssudo apt-get install build-essential cmake python-dev #编译YCM自动补全插件依赖sudo apt-get install silversearcher-ag使用python 需要安装 sudo pip install pyflakessudo pip install pylintsudo pip install pep8安装进入目录, 执行安装注意原先装过的童鞋, 重装时，不要到~/.vim下执行(这是软连接指向k-vim真是目录)，必须到k-vim原生目录执行会进入安装插件的列表，一安装是从github clone的，完全取决于网速, 之后会自动编译 YCM, 编译失败的话需要手动编译, 有问题见YCM文档如果发现有插件安装失败 可以进入vim, 执行:PlugInstall cd k-vim/sh -x&hellip;",
            "content_html": "<p>项目地址: <a href=\"https://github.com/wklken/k-vim\">https://github.com/wklken/k-vim</a></p>\n<p>wklken同学的blog主页: <a href=\"http://wklken.me/\">http://wklken.me/</a></p>\n<p>克隆到本地</p>\n<p>   <code>git clone https://github.com/wklken/k-vim.git</code>\n    安装依赖 </p>\n<pre><code>sudo apt-get install ctags\nsudo apt-get install build-essential cmake python-dev  #编译YCM自动补全插件依赖\nsudo apt-get install silversearcher-ag</code></pre><p>使用python 需要安装</p>\n<pre><code>sudo pip install pyflakes\nsudo pip install pylint\nsudo pip install pep8</code></pre><p>安装\n进入目录, 执行安装\n注意原先装过的童鞋, 重装时，不要到~/.vim下执行(这是软连接指向k-vim真是目录)，必须到k-vim原生目录执行\n会进入安装插件的列表，一安装是从github clone的，完全取决于网速, 之后会自动编译 YCM, 编译失败的话需要手动编译, 有问题见YCM文档\n如果发现有插件安装失败 可以进入vim, 执行:PlugInstall</p>\n<pre><code>cd k-vim/\nsh -x install.sh</code></pre><p>可能会很慢或者卡住，可以退出后在运行！\n手动编译YouCompleteMe\n然后到.vim/bundle/YouCompleteMe 下执行命令：</p>\n<pre><code>cd ~/.vim/bundle/YouCompleteM ./install.sh --clang-completer</code></pre><p>出现错误：\nsubprocess.CalledProcessError: Command ‘[‘/usr/bin/python2’, ‘/root/k-vim/bundle/YouCompleteMe/third\n搜到了个方法</p>\n<p>vi /.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/CMakeLists.txt\n第一行加入 set( APPLE TRUE )\n再运行 ./install.py –clang-completer</p>\n<p>它会自动下载 Clang很慢，</p>\n<p>vim需要支持python”&gt;vim需要支持python</p>\n<p>apt-get install vim-nox</p>\n<blockquote>\n<p>参考 <a href=\"http://www.ithao123.cn/content-7428879.html\">http://www.ithao123.cn/content-7428879.html</a>\n<a href=\"https://github.com/wklken/k-vim\">https://github.com/wklken/k-vim</a></p>\n</blockquote>\n",
            "author": {
                "name": "ShaoXia"
            },
            "tags": [
            ],
            "date_published": "2015-04-25T19:32:00+08:00",
            "date_modified": "2020-11-20T22:33:53+08:00"
        },
        {
            "id": "https://shaoxiaxl.github.io/blog/linux-jian-dan-chu-licc-gong-jishell-jiao-ben.html",
            "url": "https://shaoxiaxl.github.io/blog/linux-jian-dan-chu-licc-gong-jishell-jiao-ben.html",
            "title": "Linux简单处理CC攻击shell脚本!",
            "summary": "第一个脚本是通过查找日志中访问次数过多的ip,并用iptables屏蔽,600秒解封。 #!/bin/bashbtime=600attacks=20tmpBlockIPFile=/home/tmp_block_iptimestamp=$(date +%s)logPath=&quot;/home/ban.log&quot;#start detect bad ipbadip=`tac /home/www.centos.bz/access.log | awk &#39;BEGIN{cmd=&quot;date -d &quot;1 minute ago&quot; +%H%M%S&quot;cmd|getline a}{$4 = substr($4,14,8)gsub(&quot;:&quot;,&quot;&quot;,$4)$4=$4+0a=a+0if ($4&gt;=a){print $1,$7} else {exit;}}&#39; | egrep -v &#39;.(gif|jpg|jpeg|png|css|js)&#39; | awk &#39;{print $1}&#39; | sort | uniq -c | awk -v t=&quot;$attacks&quot; &#39;{$1=$1+0;t=t+0;if ($1&gt;=t) print $2}&#39;`if [ !&hellip;",
            "content_html": "<p>第一个脚本是通过查找日志中访问次数过多的ip,并用iptables屏蔽,600秒解封。</p>\n<pre><code class=\"language-shell\">#!/bin/bash\n\nbtime=600\n\nattacks=20\n\ntmpBlockIPFile=/home/tmp_block_ip\n\ntimestamp=$(date +%s)\n\nlogPath=&quot;/home/ban.log&quot;\n\n\n\n#start detect bad ip\n\nbadip=`tac /home/www.centos.bz/access.log  | awk &#39;\n\nBEGIN{\n\ncmd=&quot;date -d &quot;1 minute ago&quot; +%H%M%S&quot;\n\ncmd|getline a\n\n}\n\n{\n\n$4 = substr($4,14,8)\n\ngsub(&quot;:&quot;,&quot;&quot;,$4)\n\n$4=$4+0\n\na=a+0\n\nif ($4&gt;=a){\n\nprint $1,$7\n\n} else {\n\nexit;\n\n}\n\n}&#39; | egrep -v &#39;.(gif|jpg|jpeg|png|css|js)&#39; | awk &#39;{print $1}&#39; | sort | uniq -c | awk -v t=&quot;$attacks&quot; &#39;{$1=$1+0;t=t+0;if ($1&gt;=t) print $2}&#39;`\n\n\n\nif [ ! -z &quot;$badip&quot; ];then\n\nfor ip in $badip;\n\ndo\n\nif test -z &quot;`/sbin/iptables -nL | grep $ip`&quot;;then\n\n/sbin/iptables -I INPUT -s $ip -j DROP\n\n\n\n#record blocked ip\n\necho &quot;$timestamp $ip&quot; &gt;&gt; $tmpBlockIPFile\n\necho &quot;$(date) $ip&quot; &gt;&gt; $logPath\n\nfi\n\ndone\n\nfi\n\n\n\n#unblock ip\n\nif [ -f &quot;$tmpBlockIPFile&quot; ];then\n\nips=&quot;&quot;\n\nwhile read blockTime ip\n\ndo\n\n((interval=$timestamp - $blockTime))\n\nif [ $interval -gt $btime ];then\n\nips=&quot;$ips $ip&quot;\n\nfi\n\ndone &lt; $tmpBlockIPFile\n\n\n\nif [ &quot;$ips&quot; != &quot;&quot; ];then\n\nfor ip in &quot;$ips&quot;\n\ndo\n\nsed -i &quot;/$ip/d&quot; $tmpBlockIPFile\n\n/sbin/iptables -D INPUT -s $ip -j DROP\n\ndone\n\nfi\n\nfi\n</code></pre>\n<p>将此代码保存为ban.sh，加入cronjob使每分钟执行一次。</p>\n<p>此脚本的作用是：利用iptables屏蔽每分钟访问页面超过20的IP，这些页面已经排除图片,css,js等静态文件。</p>\n<p>第二个脚本是通过在日志中查找cc攻击的特征进行屏蔽</p>\n<pre><code class=\"language-shell\">\n#!/bin/bash\n\nkeyword=&quot;cc-atack&quot;\n\nbadip=`tail -n 5000  /home/www.centos.bz/log/access.log | grep &quot;$keyword&quot;  | awk &#39;{print $1}&#39; | sort | uniq -c | sort -nr | awk &#39;{print $2}&#39;`\n\nif [ ! -z &quot;$badip&quot; ];then\n\nfor ip in $badip;\n\ndo\n\nif test -z &quot;`/sbin/iptables -nL | grep $ip`&quot;;then\n\n/sbin/iptables -I INPUT -s $ip -j DROP\n\nfi\n\ndone\n\nfi\n</code></pre>\n<p>keyword则是日志中cc的特征，替换成有效的即可。</p>\n",
            "author": {
                "name": "ShaoXia"
            },
            "tags": [
                   "优化"
            ],
            "date_published": "2013-11-20T23:30:00+08:00",
            "date_modified": "2020-11-20T22:21:46+08:00"
        },
        {
            "id": "https://shaoxiaxl.github.io/blog/tao-li.html",
            "url": "https://shaoxiaxl.github.io/blog/tao-li.html",
            "title": "套利!",
            "summary": "昨天，老唐分享了两篇如何利用可转债负溢价白捡钱的短文，一时间引来大批询问，时间和精力原因，无法一一作答，索性今天汇总一篇完整的，从最基础的知识说起，将朋友们问到的问题，都放在这个帖子里，一起答了。看懂昨天两个捡钱贴的，这篇不用看了。 先说套利的原理 1）可转债，是一种附加了转股权利的债券。仍然以民生可转债为例，目前转股价格为8.18元。这代表着持有一张民生可转债，可以选择在任意时候，向民生银行股份公司换100/8.18=12.2249股民生银行股票； 2）上条换股权利，不因可转债价格波动改变，也不因民生银行股票价格波动改变。除非经过民生银行股东大会审议通过下调转股价。合约规定，下调的条件是：民生银行股票连续30个交易日内，有15个交易日的收盘价低于转股价的80%。也就是说，只有在连续30个交易日内，有15个交易日收盘价低于6.55元，才有可能启动转股价下调议案，改变上条谈到的兑换股数。 3）注意：上一条说的“有可能启动转股价下调”并不代表一定能下调。2014年2月27日，雪球很多民生银行股东（包括老唐）都曾对下调议案投过否决票，并最终成功否决了下调议案。这个与套利无关，各位知道即可； 4）先记住「一张转债=100/8.18股民生银行」这个概念，很重要，等下会用到。转债的报价，以一张为单位，一手是10张，最低买卖一手。参照股票理解的话，就是说买卖以10股为单位，以当前价格130左右计算，最低参与起点是一千三百多元。券商佣金手续费和你买卖股票一样，不收印花税。 5）因为「一张转债=100/8.18股民生银行股票」，因此，很显然，他们俩之间的价格有个准确的关系，就是「转债该有的价格=民生银行股票价格x100/8.18」。 6）然而，由于市场里有各种各样的投资者，分别交易着可转债和股票，两者之间可能出现价格不同步的现象。一般而言，熊市里，保守的投资者偏爱可转债，而股价通常跌的厉害，因此，一般可转债的市场价格，会高过「该有的价格」，体现为溢价；而牛市里，由于可转债的认知度比较低（连雪球这么个聪明投资者聚集的地方，都有很多人不知），因而，常常出现，可转债市场价格低于「该有的价格」，此时为折价或者叫负溢价； 7）由于债可以换成股票，而股票不允许换成债券，因此只有在可转债价格低于「该有的价格」时，即出现折价（溢价率为负）的时候，才会产生套利机会。 8）上面的原理听懂了没？如果还没有听懂，老唐再举个简化例子，假设协议规定一张转债可以换10股某股票，但是由于大爷大妈们熟悉股票而不熟悉可转债，因此此时，股票被更多人买，股价是13元。转债很少人买价格是120，于是你将手头持有的或者借来的100股股票按照13元卖出，得到1300元。买入10张转债付出1200元，装兜里100元（实际略少，要扣交易费用），然后拿着10张转债，向公司申请换100股股票，或继续持有不变或换给券商。套利完成。 接下来说套利的操作步骤： 9）雪球里点击民生转债（SH：110023）的页面，就有溢价率实时计算。或者点击集思录的转债行情http://www.jisilu.cn/data/cbnew/#tlink_3 也有实时的所有转债的溢价率数据。顺带，有很多朋友问某某转债的代码，某某转债的转股价等等，老唐哪儿记得到那么多啊，集思录这个链接里都有，自己看； 10）所谓溢价率，就等于（转债市价/该有的价格-1）x100%。以下面这张雪球行情截图时刻为例，10.74*100/8.18=131.2958，这是转债「该有的价格」，此时由于市场交易行为导致转债实际价格为130.4，因此，溢价率=（130.4/131.2958-1）x100%=-0.68%； 11）前面说过了，只有这个溢价率为负的时候，才代表着捡钱的机会。一般来说，因为股票买卖会产生约0.1%的印花税，以及0.02%0.1%不等的佣金，同时转债的买入也可能产生0.02%0.1%的佣金，所以，理论上来说，至少要负溢价率至少要大过-0.3%以上，才有价值。但考虑到买入卖出的几十秒内可能出现的成交价格变动，老唐一般建议负溢价超过-1%时，才有动手价值。当然，熟练工除外。至于佣金还是0.3%的，算了吧， 还是先去搞个优惠佣金率再考虑玩； 12）现在，我们假设你看见了溢价率超过-1%了，银子已经白花花的闪了，怎么捡回来呢？ 13）第一步：有民生银行股票的，卖出民生银行股票；没有民生银行股票的，看看融券账户里能不能借到券，如果可以，借来卖出它；如果自己没有股票，也融不到券，那就洗洗睡了，那堆银子跟你无关；有人问，没有股票的，为什么不能买进折价转债，再转股来卖高价呢？原因是，你买的转债转股要等第二天才可以卖出股票。因此，你要承担今天买入转债后，到明天开盘价之间的价格波动。万一跌了呢？这就不是捡钱了； 14）第二步：立刻（立刻的意思是不管股价是多少，有多快搞多快）拿刚刚卖股票的钱，全部买入110023民生可转债； 15）此时，银子已经在你兜里了，接下来可以慢悠悠的处理了。注意，此后股票也好，转债也好，价格仍然会涨会跌，但这个跟套利行为无关。如果你本来就持有民生银行股票，你不操作这个套利，你依然承担着股票涨跌的风险和收益。如果你是借来的股票，那更和你无关了。你只需要负责将同等数量的股票还给券商，并同时付清利息即可，至于股价，跌停板你也是还那么多数量，涨停板，你还是还那么多数量； 16）如果可转债价格下跌了呢？不是亏了？没亏。回看我们前面说的「一张转债=100/8.18股民生银行股票」，所以你现在其实持有的是民生银行股票，股票的涨跌风险参见上一条。 17）问题来了，既然转债也是股票，为什么我要折腾呢？因为溢价率-1%产生的时候，意味着「一张转债=100/8.18股民生银行股票」公式的左边是99，而公式的右边是100，因而你持有同样数量的股票，你可以省下1%的钱在兜里（举例就暂时忽略税费了），或者同样多的钱，你可以多拿1%的股票。别小看了1%哦，敲敲键盘，1000万本金，就收进来10万块。即便是10万本金，也有1000块。什么，你只有一万本金，好吧，好歹也可以买两斤羊肉补补敲键盘花费的力气了； 18）收下了这1%的银子以后，其实还有可能一鱼两吃，再赚一笔。就是等溢价率由负转正（今天老唐就完成了一鱼两吃，哈哈，很开心）。一鱼两吃烹调技法如下； 19）加保险绳。进入券商交易系统——委托——在转债代码栏里输入190023——转股价格一般是自动填好的100元——填入你买回来的可转债全部数量——确认。这一条里，有几点被问的比较多，下面分条叙述； 20）各个券商系统，可能会略有差异。老唐说的这个是国信的，其他券商的债转股安排在哪儿，问自己的券商，别问老唐；转债代码190023，是规定的。一般买的转债如果是1100XX，这里就是1900XX。玩民生转债以外的转债，代码可以上前面发的集思录那个链接看，点开你要的转债，里面有转股代码； 21）这个保险绳，是命令当日收盘后，系统自动拿你的转债去民生银行换成股票，兑换比例就是前面说的「转债张数x100/8.18」，不足1股的，退现金给你。只要够一股的，都会给你。至于明天拿到股票，你是还给券商，还是立刻卖掉或者是继续持有，随你了。但记住，其后持有的价格变动带来的收益或亏损，与本次套利无关，那是你的另一个决定； 22）完了吗？没有，这条鱼还可以再吃一嘴。你可以全天盯着转债的价格，如果其溢价率转为正了（最好在+0.3%以上，原因参见第9条，具体之上多少，自己感觉了，反正就是多捡少捡的事儿）你还可以卖掉转债（转债是T+0的），然后立刻买回股票。买回股票后的持有、卖掉还是还给券商，和上条一样，不是套利范畴的事儿，自己决定； 23）千万注意，如果溢价率不高于+0.3%，就别动了，动了反而把刚刚套的利吐出去部分。这里的原理，和第15条说的一样，只不过反过来而已。老唐就不解释了，自己看。实在不懂呢，背下来照做即可； 24）如果你执行了第22条的行动，那么第19步的保险绳自动就废掉了，对你毫无影响。 最后说说注意事项 25）要注意，民生2015年1月9日要派发14年中期红利，12月29日还可以转股。12月30日就不能转股了；目前转股价为8.18元，12月30日以后的转股价应该会变成8.18-0.075=8.11（本来可能是8.105，但估计会进位成8.11）。届时，一张转债能换的股票数量就是100/8.11=12.33股了，到时候的转债应该有的价格，同样会变成「民生银行股价x100/8.11」； 26）特别叮咛一句，操作转债要选正股和转债成交都比较活跃的，如果成交不活跃，一时成交不了或者买一卖一盘价差挺大，那套利可能变成陷阱。民生不存在这个问题，但其他的转债成交活跃情况，要自己看，老唐也不熟； 27）很多转债有强制回售规则，就是说达到股票价格达到某个价位了，如果你不转股或者不卖出转债，公司就会用一个很低的价格强制收回你持有的转债。这是为了逼迫转债持有人转股的规则，如果你忽视了，既没有转股，也没有卖出，就可能遭受损失，这个需要各位玩转债的朋友自己注意强制回售规则； 28）例如民生银行，强制回售规则是：民生银行股票价格连续三十个交易日中至少有十五个交易日的收盘价格不低于当期转股价格的130%（含130%）。也就是说如果连续30个交易日内，有15天收盘价≥10.63元（8.18×130%，），公司就有权以一百零几元的价格收购你的可转债，你不许抵抗。民生银行的股价升破10.63是从昨天（12月25日）开始的，考虑到马上除息了，实际上10.63元标杆会变成10.54（8.11×130%），玩这个的话，自己注意一下这两个数字； 29）手把手教你可转债套利，白捡钱的硬知识传授完毕，欢迎各位购买雪碧来表达谢意。这个老唐会收的理直气壮，任何学到的人，哪怕运用一次，也会挣回来几千几万乃至几十万几百万雪碧，所以老唐大小通吃，绝不抗拒，顺带表达对雪球官方的支持和敬意。当然，您若懒得打赏，老唐也已经免费分享了，您就偷着乐吧； 30）也欢迎各位购买老唐的《手把手教你读财报》一书。请注意，不是要你来支持老唐，而是老唐自认这本书真材实料，或多或少可以帮到投资者，无论是资深的还是新韭菜。是不是吹牛，各位读过以后，自己下判断，购书链接 http://product.dangdang.com/23625042.html 后记：这篇文章，居然还有人说复杂。当然估计是说原理复杂，不过捡钱真心不复杂。重发一遍昨天介绍过的捡钱四大规定姿势（各个转债都是这姿势，仅仅是代码不同）： 1）看见溢价率-1%以上了，卖出股票600016； 2）立刻（有多快搞多快）拿卖票的钱，买入转债110023； 3）慢悠悠的进入券商交易软件的“转股回售——输入代码190023——数量全部——确认”。套利结束，你的额外的1%左右到手了。 4）另外一包银子：如果到收盘前溢价率变成+0.3%以上（上多少，自己决定，等的久可能捡更多，也可能这包银子就被别人捡走了）。进交易系统，卖掉全部的110023，立刻买回600016。另一包银子收到。 转开套利 截止2008年1月7日,我一共做过5次封转开套利.分别是:我的封转开第一单:封基裕元(500016),转,开基博时产业(050008)我的封转开第二单:封基景博(184695),转,开基大成创新(050008)我的封转开第三单:封基同德(500039),转,开基长盛同德(519039)我的封转开第四单:封基隆元(184710),转,开基南方隆元(202007)我的封转开第五单:封基景阳(500007),转,开基大成景阳(519019) (1)我的封转开第一单:封基裕元(500016),转,开基博时第三产业(050008)&lt;1&gt;2007年上半年个股行情火爆,我也小有斩获.如何保住胜利果同时能使自己的资金进一步稳定增长,就成了我当时的心中所想.封转开首次进入了我的投资视野,在参于之前,我在网上查找了一些相关的信息,给我的感觉:封转开基是个不错的防御性的投资品种,如果买后大盘下跌,还有一定的折价率做为防护垫,反之买后大盘继续上涨,那我就比别人先多赚了一段利润.由于当时大盘的走势还是相当不错的,我参于裕元的封转开也没有太多的顾虑,于是我在裕元停盘退市前的最后一个交易日2007年4月11日,1.931元/份,买入209000份,4月12日裕元公告净值是:2.174元/股,相对前一天我的买价,有了近12%的折价率,为我的封转开的第一单,垫定了成功的基石.4月24日博三产业一天就完成了募集100亿的预定规模,当天也是它的拆分日,净值是:2.212元/份,4月27日博三产业就可办理日常申购和赎回的业务了.",
            "content_html": "<p>昨天，老唐分享了两篇如何利用可转债负溢价白捡钱的短文，一时间引来大批询问，时间和精力原因，无法一一作答，索性今天汇总一篇完整的，从最基础的知识说起，将朋友们问到的问题，都放在这个帖子里，一起答了。看懂昨天两个捡钱贴的，这篇不用看了。</p>\n<p>先说套利的原理</p>\n<p>1）可转债，是一种附加了转股权利的债券。仍然以民生可转债为例，目前转股价格为8.18元。这代表着持有一张民生可转债，可以选择在任意时候，向民生银行股份公司换100/8.18=12.2249股民生银行股票；</p>\n<p>2）上条换股权利，不因可转债价格波动改变，也不因民生银行股票价格波动改变。除非经过民生银行股东大会审议通过下调转股价。合约规定，下调的条件是：民生银行股票连续30个交易日内，有15个交易日的收盘价低于转股价的80%。也就是说，只有在连续30个交易日内，有15个交易日收盘价低于6.55元，才有可能启动转股价下调议案，改变上条谈到的兑换股数。</p>\n<p>3）注意：上一条说的“有可能启动转股价下调”并不代表一定能下调。2014年2月27日，雪球很多民生银行股东（包括老唐）都曾对下调议案投过否决票，并最终成功否决了下调议案。这个与套利无关，各位知道即可；</p>\n<p>4）先记住「一张转债=100/8.18股民生银行」这个概念，很重要，等下会用到。转债的报价，以一张为单位，一手是10张，最低买卖一手。参照股票理解的话，就是说买卖以10股为单位，以当前价格130左右计算，最低参与起点是一千三百多元。券商佣金手续费和你买卖股票一样，不收印花税。</p>\n<p>5）因为「一张转债=100/8.18股民生银行股票」，因此，很显然，他们俩之间的价格有个准确的关系，就是「转债该有的价格=民生银行股票价格x100/8.18」。</p>\n<p>6）然而，由于市场里有各种各样的投资者，分别交易着可转债和股票，两者之间可能出现价格不同步的现象。一般而言，熊市里，保守的投资者偏爱可转债，而股价通常跌的厉害，因此，一般可转债的市场价格，会高过「该有的价格」，体现为溢价；而牛市里，由于可转债的认知度比较低（连雪球这么个聪明投资者聚集的地方，都有很多人不知），因而，常常出现，可转债市场价格低于「该有的价格」，此时为折价或者叫负溢价；</p>\n<p>7）由于债可以换成股票，而股票不允许换成债券，因此只有在可转债价格低于「该有的价格」时，即出现折价（溢价率为负）的时候，才会产生套利机会。</p>\n<p>8）上面的原理听懂了没？如果还没有听懂，老唐再举个简化例子，假设协议规定一张转债可以换10股某股票，但是由于大爷大妈们熟悉股票而不熟悉可转债，因此此时，股票被更多人买，股价是13元。转债很少人买价格是120，于是你将手头持有的或者借来的100股股票按照13元卖出，得到1300元。买入10张转债付出1200元，装兜里100元（实际略少，要扣交易费用），然后拿着10张转债，向公司申请换100股股票，或继续持有不变或换给券商。套利完成。</p>\n<p>接下来说套利的操作步骤：</p>\n<p>9）雪球里点击民生转债（SH：110023）的页面，就有溢价率实时计算。或者点击集思录的转债行情<a href=\"http://www.jisilu.cn/data/cbnew/#tlink_3\">http://www.jisilu.cn/data/cbnew/#tlink_3</a> 也有实时的所有转债的溢价率数据。顺带，有很多朋友问某某转债的代码，某某转债的转股价等等，老唐哪儿记得到那么多啊，集思录这个链接里都有，自己看；</p>\n<p>10）所谓溢价率，就等于（转债市价/该有的价格-1）x100%。以下面这张雪球行情截图时刻为例，10.74*100/8.18=131.2958，这是转债「该有的价格」，此时由于市场交易行为导致转债实际价格为130.4，因此，溢价率=（130.4/131.2958-1）x100%=-0.68%；</p>\n<p>11）前面说过了，只有这个溢价率为负的时候，才代表着捡钱的机会。一般来说，因为股票买卖会产生约0.1%的印花税，以及0.02%<del>0.1%不等的佣金，同时转债的买入也可能产生0.02%</del>0.1%的佣金，所以，理论上来说，至少要负溢价率至少要大过-0.3%以上，才有价值。但考虑到买入卖出的几十秒内可能出现的成交价格变动，老唐一般建议负溢价超过-1%时，才有动手价值。当然，熟练工除外。至于佣金还是0.3%的，算了吧， 还是先去搞个优惠佣金率再考虑玩；</p>\n<p>12）现在，我们假设你看见了溢价率超过-1%了，银子已经白花花的闪了，怎么捡回来呢？</p>\n<p>13）第一步：有民生银行股票的，卖出民生银行股票；没有民生银行股票的，看看融券账户里能不能借到券，如果可以，借来卖出它；如果自己没有股票，也融不到券，那就洗洗睡了，那堆银子跟你无关；有人问，没有股票的，为什么不能买进折价转债，再转股来卖高价呢？原因是，你买的转债转股要等第二天才可以卖出股票。因此，你要承担今天买入转债后，到明天开盘价之间的价格波动。万一跌了呢？这就不是捡钱了；</p>\n<p>14）第二步：立刻（立刻的意思是不管股价是多少，有多快搞多快）拿刚刚卖股票的钱，全部买入110023民生可转债；</p>\n<p>15）此时，银子已经在你兜里了，接下来可以慢悠悠的处理了。注意，此后股票也好，转债也好，价格仍然会涨会跌，但这个跟套利行为无关。如果你本来就持有民生银行股票，你不操作这个套利，你依然承担着股票涨跌的风险和收益。如果你是借来的股票，那更和你无关了。你只需要负责将同等数量的股票还给券商，并同时付清利息即可，至于股价，跌停板你也是还那么多数量，涨停板，你还是还那么多数量；</p>\n<p>16）如果可转债价格下跌了呢？不是亏了？没亏。回看我们前面说的「一张转债=100/8.18股民生银行股票」，所以你现在其实持有的是民生银行股票，股票的涨跌风险参见上一条。</p>\n<p>17）问题来了，既然转债也是股票，为什么我要折腾呢？因为溢价率-1%产生的时候，意味着「一张转债=100/8.18股民生银行股票」公式的左边是99，而公式的右边是100，因而你持有同样数量的股票，你可以省下1%的钱在兜里（举例就暂时忽略税费了），或者同样多的钱，你可以多拿1%的股票。别小看了1%哦，敲敲键盘，1000万本金，就收进来10万块。即便是10万本金，也有1000块。什么，你只有一万本金，好吧，好歹也可以买两斤羊肉补补敲键盘花费的力气了；</p>\n<p>18）收下了这1%的银子以后，其实还有可能一鱼两吃，再赚一笔。就是等溢价率由负转正（今天老唐就完成了一鱼两吃，哈哈，很开心）。一鱼两吃烹调技法如下；</p>\n<p>19）加保险绳。进入券商交易系统——委托——在转债代码栏里输入190023——转股价格一般是自动填好的100元——填入你买回来的可转债全部数量——确认。这一条里，有几点被问的比较多，下面分条叙述；</p>\n<p>20）各个券商系统，可能会略有差异。老唐说的这个是国信的，其他券商的债转股安排在哪儿，问自己的券商，别问老唐；转债代码190023，是规定的。一般买的转债如果是1100XX，这里就是1900XX。玩民生转债以外的转债，代码可以上前面发的集思录那个链接看，点开你要的转债，里面有转股代码；</p>\n<p>21）这个保险绳，是命令当日收盘后，系统自动拿你的转债去民生银行换成股票，兑换比例就是前面说的「转债张数x100/8.18」，不足1股的，退现金给你。只要够一股的，都会给你。至于明天拿到股票，你是还给券商，还是立刻卖掉或者是继续持有，随你了。但记住，其后持有的价格变动带来的收益或亏损，与本次套利无关，那是你的另一个决定；</p>\n<p>22）完了吗？没有，这条鱼还可以再吃一嘴。你可以全天盯着转债的价格，如果其溢价率转为正了（最好在+0.3%以上，原因参见第9条，具体之上多少，自己感觉了，反正就是多捡少捡的事儿）你还可以卖掉转债（转债是T+0的），然后立刻买回股票。买回股票后的持有、卖掉还是还给券商，和上条一样，不是套利范畴的事儿，自己决定；</p>\n<p>23）千万注意，如果溢价率不高于+0.3%，就别动了，动了反而把刚刚套的利吐出去部分。这里的原理，和第15条说的一样，只不过反过来而已。老唐就不解释了，自己看。实在不懂呢，背下来照做即可；</p>\n<p>24）如果你执行了第22条的行动，那么第19步的保险绳自动就废掉了，对你毫无影响。</p>\n<p>最后说说注意事项</p>\n<p>25）要注意，民生2015年1月9日要派发14年中期红利，12月29日还可以转股。12月30日就不能转股了；目前转股价为8.18元，12月30日以后的转股价应该会变成8.18-0.075=8.11（本来可能是8.105，但估计会进位成8.11）。届时，一张转债能换的股票数量就是100/8.11=12.33股了，到时候的转债应该有的价格，同样会变成「民生银行股价x100/8.11」；</p>\n<p>26）特别叮咛一句，操作转债要选正股和转债成交都比较活跃的，如果成交不活跃，一时成交不了或者买一卖一盘价差挺大，那套利可能变成陷阱。民生不存在这个问题，但其他的转债成交活跃情况，要自己看，老唐也不熟；</p>\n<p>27）很多转债有强制回售规则，就是说达到股票价格达到某个价位了，如果你不转股或者不卖出转债，公司就会用一个很低的价格强制收回你持有的转债。这是为了逼迫转债持有人转股的规则，如果你忽视了，既没有转股，也没有卖出，就可能遭受损失，这个需要各位玩转债的朋友自己注意强制回售规则；</p>\n<p>28）例如民生银行，强制回售规则是：民生银行股票价格连续三十个交易日中至少有十五个交易日的收盘价格不低于当期转股价格的130%（含130%）。也就是说如果连续30个交易日内，有15天收盘价≥10.63元（8.18×130%，），公司就有权以一百零几元的价格收购你的可转债，你不许抵抗。民生银行的股价升破10.63是从昨天（12月25日）开始的，考虑到马上除息了，实际上10.63元标杆会变成10.54（8.11×130%），玩这个的话，自己注意一下这两个数字；</p>\n<p>29）手把手教你可转债套利，白捡钱的硬知识传授完毕，欢迎各位购买雪碧来表达谢意。这个老唐会收的理直气壮，任何学到的人，哪怕运用一次，也会挣回来几千几万乃至几十万几百万雪碧，所以老唐大小通吃，绝不抗拒，顺带表达对雪球官方的支持和敬意。当然，您若懒得打赏，老唐也已经免费分享了，您就偷着乐吧；</p>\n<p>30）也欢迎各位购买老唐的《手把手教你读财报》一书。请注意，不是要你来支持老唐，而是老唐自认这本书真材实料，或多或少可以帮到投资者，无论是资深的还是新韭菜。是不是吹牛，各位读过以后，自己下判断，购书链接 <a href=\"http://product.dangdang.com/23625042.html\">http://product.dangdang.com/23625042.html</a></p>\n<p>后记：这篇文章，居然还有人说复杂。当然估计是说原理复杂，不过捡钱真心不复杂。\n重发一遍昨天介绍过的捡钱四大规定姿势（各个转债都是这姿势，仅仅是代码不同）：\n 1）看见溢价率-1%以上了，卖出股票600016；\n 2）立刻（有多快搞多快）拿卖票的钱，买入转债110023；\n 3）慢悠悠的进入券商交易软件的“转股回售——输入代码190023——数量全部——确认”。套利结束，你的额外的1%左右到手了。\n 4）另外一包银子：如果到收盘前溢价率变成+0.3%以上（上多少，自己决定，等的久可能捡更多，也可能这包银子就被别人捡走了）。进交易系统，卖掉全部的110023，立刻买回600016。另一包银子收到。</p>\n<h2 id=\"2\">2</h2>\n<p>转开套利</p>\n<p>截止2008年1月7日,我一共做过5次封转开套利.分别是:\n我的封转开第一单:封基裕元(500016),转,开基博时产业(050008)\n我的封转开第二单:封基景博(184695),转,开基大成创新(050008)\n我的封转开第三单:封基同德(500039),转,开基长盛同德(519039)\n我的封转开第四单:封基隆元(184710),转,开基南方隆元(202007)\n我的封转开第五单:封基景阳(500007),转,开基大成景阳(519019)</p>\n<p>(1)我的封转开第一单:封基裕元(500016),转,开基博时第三产业(050008)\n&lt;1&gt;2007年上半年个股行情火爆,我也小有斩获.如何保住胜利果同时能使自己的资金进一步稳定增长,就成了我当时的心中所想.封转开首次进入了我的投资视野,在参于之前,我在网上查找了一些相关的信息,给我的感觉:封转开基是个不错的防御性的投资品种,如果买后大盘下跌,还有一定的折价率做为防护垫,反之买后大盘继续上涨,那我就比别人先多赚了一段利润.由于当时大盘的走势还是相当不错的,我参于裕元的封转开也没有太多的顾虑,于是我在裕元停盘退市前的最后一个交易日2007年4月11日,1.931元/份,买入209000份,4月12日裕元公告净值是:2.174元/股,相对前一天我的买价,有了近12%的折价率,为我的封转开的第一单,垫定了成功的基石.4月24日博三产业一天就完成了募集100亿的预定规模,当天也是它的拆分日,净值是:2.212元/份,4月27日博三产业就可办理日常申购和赎回的业务了.</p>\n<p>&lt;2&gt;4月24日是老封基裕元的拆分日,裕元2007-4-24公布净值:2.212元/份\n我买了209000份老封基裕元,拆分后可得新开基博时第三产业份额:\n2.212元/份×209000份=462308份×1.0元净值（净值归一）\n我买入时投入的资金是:\n209000份×1.931元/份+209000份×1.931元/份×0.2%=404386元\n(备注:0.2%是买入封基时的单边网上交易手续费)\n到拆分日时我共赢利:462308份×1.0元/份-404386元=57922元\n赢利率:57922元/404386元=14.32%\n裕元公告在4月27日打开了赎回,当天净值是1.002元/份!\n至此我的裕元封转开套利历时半个月(2007.4.11–2007.4.27),我在2007年4月27日打开赎回的第一天就获利出局了,扣赎回时的手续费率0.5%,最终结果是赚13.92%,（赎回费=462308份×1.002元×0.5%=2316.16元，最终赢利=57922-2316=55606元，赢利率=55606/404386=13.75%）来了个开门红,再来看看同期上证综指表现:2007年4月11日:3495,22点,2007年4月27日:3759.87点,涨幅是7.57%,参于裕元封转开套利可跑赢上证综指6.35%左右。</p>\n<p>(2)我的封转开第二单:封基景博(184695),转,开基大成创新(050008)\n&lt;1&gt;由于前期刚经历过5.30上调证券印花税率的风雨洗礼,此时我的安全意识较强,有了前次封转开的经验,我再次于6月11日以2.228元买入305000份景博,参于景博的封转开套利.</p>\n<p>&lt;2&gt;6月22日是老封基景博的拆分日,景博2007-6-22公布净值:2.211元/份\n我买了305000份老封基景博,拆分后可得新开基大成创新份额:\n2.211元/份×305000份=674355份(净值归一)\n我6月11日买入305000份,同日是景博10派2元,分红登记日,我买入时投入的资金是:\n305000份×2.228元/份+305000份×2.228元/份×0.2%-305000份×0.2元=619899元\n(备注:0.2%是买入封基时的单边网上交易手续费)\n到拆分日时我共赢利:674355份×1元/份-619899元=54455.9元\n赢利率:54455.9元/619899元=8.78%\n大成创新公告在7月18日打开了赎回,当天净值是0.968元/份!\n(674355份×0.968元/份-619899元)/619899元=5.3%\n至此我的景博封转开套利历时一个半个月(2007.6.11–2007.7.18),我在2007年7月18日打开赎回的第一天就获利出局了,扣赎回时的手续费率0.5%,最终结果是赚4.8%,虽然赚的不多,也算是封转开套利成功了!\n再来看看同期上证综指表现:2007年6月11日:3995.68点,2007年7月18日:3930.6点,跌幅是-1.628%,参于景博封转开套利可跑赢上证综指6.428%左右.</p>\n<p>(3)我的封转开第三单:封基同德(500039),转,开基长盛同德(519039)\n&lt;1&gt;我第一次买同德是在10月15日,3.010元/份,买入同德278000份,10月16日在同德盘中快速冲高的过程中我在3.097全部卖出,扣来回的手续费0.4%,获利2.49%,因为当天我自己估算出的同德盘中估值是在3.16元/份左右,折价率大概在-2%左右, 考虑到封转开过程中的流动性风险及时间成本,我决定还是暂时先获利了解更现实一些,毕竟以后是风险还是收益都是预计,事先谁也说不好,先把看得见的收益落袋为安,手中留有资金就还有机会!</p>\n<p>&lt;2&gt;我第二次买同德是在2007年10月24日,从当天的上证综指周线kdj指标来看是死亡交叉,大盘有中线调整的危险,同时在26日有中石油新股发行,我粗略的估算了下,可能是1%–2%左右的中签率,发行价16元/股,需资金160万可稳中1000股,参照前期刚上市的中国神华上市几天后的短线连续上涨的勇猛表现,以及比照同类型的上市不久的新股中海油服的现价,我自己估计中石油上市后的开盘价可能在50元/股左右,花160万可稳中1000股中石油,假设开在46.3元,扣卖出的手续费0.6%(即差不多0.3元股),1000股就能赚30000元,收益率大约是:3/160=2%左右.就算比自己预期赚的少也能有个1%收益,打新股可是稳赚不赔的,本着稳健的原则,我最后决定在2007年10月26日(周五)还是申购中石油新股较稳,我有两个账户,单一的一个账户上的资金无法保证稳中1000股中石油,需两个账户的资金合并,可是这时候问题来了,我所在的证券营业部最新规定:当天转账资金超过5万,要事先预约,这下时间上就来不及打新股了,这时候同德再次落入了我的投资视野,由于封闭式基金是每周只公告一次净值,就是每周五晚,而24日是周三,经我粗略估计当天同德的净值可能在3.11元/份,此时二级市场的市价是3.03元/份,对应的折价率是-2.4%左右,从当天大盘的日线kdj指标及移动平均线ma,再结合当天盘面走势,大盘短线反弹的可能行很大,从以前开放式基金的募集速度看多是在当天就完成了预定目标,就算同德慢点,三天也足够募集完了,我前期就细查过同德的历史业绩,给我的感觉是:极佳的防御品种,抗跌性好,激进不足.真好符合我的要求,我就是担心大盘要调整才打算参于封转开套利,准备赚点稳健的小利,同德是25日停止交易,26日就开始募集新资金,三个交易日后就是30日左右,验资需1–2天,在31日左右就可能拆分了,只要过了拆分日我这次封转开套利就基本成功了,因为拆分日后新老资金和股票合并了,同德以前只有5亿的总规模,由于是封基,最多也就是80%的股票持仓,相对新募集的150亿的新资金(现金),股票持仓只有(3.11元×5亿×80%)/(155亿)=8.03%,涨跌都慢了!我就进了保险箱了!就算万一错了,凭同德在以前熊市中的历史表现看也差不到那去,(俗话说三个臭皮匠还能顶个诸葛亮呢,何况同德有三位经理呢)</p>\n<p>充分考虑好后,我就果断出手了,24日在3.03元/份,买入500039同德278000份,秉承鸡蛋不放在一个篮子里的投资理念,我没有满仓同德只是重仓,我也怕事有万一,不过还好当天收盘时同德收在3.045元/份.我的账面还略有浮赢,虽是少点也比赔了强!25日同德就停止了交易,剩下的我就只有等待了,从此时起我的赢亏命运就已掌握在同德的手里了,我是一点劲也用不上了!随后几天大盘虽有反复,但总的还是在我的预料之中.在10月31日上证综指收于5954.77点,比同德24日停盘时的5843点涨了近150点,此时同德的折价率已扩大到了5%以上,我不由暗暗窃喜,可是这时最大的麻烦来了,和同德同一天发行的华安创新一天就超了150亿,还采用了比例配售,而我买的同德迟迟不见停止的公告,此时我预感到情况要不妙了,我再一看大盘的周线指标,我的心一下就绷紧了,本来就中线不看好,只是看好短线反弹,看来我这次封转开套利要失败,同德让我很伤心,直到11月16日,我也被人家来了个瓮中捉鳖!我是千算万算不如天算,同德三经理没想到,同德的新基民没想到,我同样也没想到,可是只有我真实的赔钱了!惨呀!所以说投资市场是千变万化的,7分技术,三分运气,缺一不可,我只好安慰自己:只要我尽力了,剩下的就由命运来安排吧!</p>\n<p>&lt;3&gt;11月20日是老封基同德的拆分日,同德2007-11-20公布净值:2.8655元/份\n我买了278000份份老封基同德,拆分后可得新开基长盛同德份额:\n2.8655×278000份=796609份\n我买入时投入的资金是:\n278000份×3.03元/份+278000份×3.03元/份×0.2%=844024.69元\n(备注:0.2%是买入封基时的单边网上交易手续费)\n我共亏损:844024.69元-796609份×1元/份=47415.69元,\n亏损率:47415.69元/844024.69元=-5.62%\n就是说同德封转开,转换完后,等新开基长盛同德的净值涨到,1.0562元/份,我才会不陪钱,再加上赎回时要付的0.5%的赎回费,大概在1.0615元时,我赎回时才能完全平手,考虑到之前我做过一次高抛低吸,成本能降2.49%,大概在1.03658元时,我赎回时就可以不赔了,按1元/份,买新开基长盛同德的朋友,他们在1.02元左右赎回时就能完全平手,我比1元/份买的朋友还多花:1.03658-1.020=0.01658元/份,换成百分比是1.658%左右!\n长盛同德公告在12月14日打开了赎回,当天净值是1.0239元/份!\n至此我的同德封转开套利历时一个半月最终以赔-1.268%的结果,暂时失败而告终,但是我没有急于赎回同德,因为在这一个半月的观察中,同德已初露黑马相,我初步打算在2008年的一月底到而二月初时赎回同德,我私下估计大盘可能在5800–6000点之间,同德的净值是在1.20元–1.25元之间.再来看看同德停盘期间的大盘涨跌情况:10月24日上证综指收于5843.11点,12月14日收于5007.91点,即在同德封开期间大盘跌幅是14.3%,而参于同德封转开的损失率是3.55%=(1.0615-1.0239)/1.0615,跌幅远小于同期大盘指数的跌幅,说明参于封转开,能回避一定的下跌风险.我是职业炒手,所以不可能象上班族一样买了基金一放做中长线,这样的话我就没事干了,就失业了,我要充分发挥我12年炒股慢慢积攒下来的一点个人经验,争取利润最大化,目前我是11年赢利1年亏损,算是初有小成吧!</p>\n<p>&lt;4&gt;以上说明,在封转开过程中除了要考虑到流动性风险,还要充分考虑到停盘后到拆分日间的大盘走势,只有综合考虑了各种可能才去参加封转开套利,至于最终是否参加封转开套利还是要看每人对风险的承受能力的!如果你很想买1元/份的新基,那还不如在封转开之前买入老封基呢,因为最少你买的封基还有一定的折价率能做防护垫呢!要是停盘期间大盘涨了.你就赢在了起跑线上了!是投资就会有风险,你如果老想回避失败往往也就回避了成功,失败了不要紧,只要知道原因,别忘了失败是成功之母!</p>\n<p>(4)我的封转开第四单:封基隆元(184710),转,开基南方隆元(202007)\n&lt;1&gt;由于有了前三次封转开套利的经验,11月1日我和几个朋友都在4.04元/份左右买入了隆元,当时隆元的折价率是5%左右(防护垫),基金净值爱随大盘指数波动,开基的净值涨跌幅一般来说比指数涨跌幅要小,隆元5%左右的折价率我粗略估计了下:能抵抗上证综指300点左右的下跌,我买隆元时指数是5536点,买了隆元可坚持到5200点左右不赔钱,要是随后大盘还止不住跌势,买封转开基也得赔,以上说明封转开套利也是有风险的,不过它事先有了一个折价率作为缓冲剂,一般情况下能留给封转开套利朋友的折价率也就是在5%左右(算是对今后1–2个月资金流动性风险的补偿)</p>\n<p>我是在4.04元/份买了隆元12500份,我看当时大盘走势不稳,我在11月5日先全部卖出了隆元,随后在11月6日3.962元/份再次买入了隆元,我做了把倒差价,比死捂的朋友降低了1.55%左右的成本(扣来回手续费),当时我是这么想的:要是我做对了隆元的这次高抛低吸我就参加封转开套利,否则就放弃这次封转开套利.毕竟我只赔了点手续费,不多!赚钱的机会是找出来的,不是等出来的,只要我手中有钱就还有机会!</p>\n<p>&lt;2&gt;12月4日是老封基隆元的拆分日,隆元2007-12-4公布净值:3.851元/份\n我买了12500份老封基隆元,拆分后可得新开基南方隆元份额:\n3.851元/份×12500份=48137.5份\n我买入时投入的资金是:\n12500份×3.962元/份+12500份×3.962元/份×0.2%=49624.05元\n(备注:0.2%是买入封基时的单边网上交易手续费)\n到拆分日时我共亏损:49624.05元-48137.5×1元/份=1486.55元\n亏损率:1486.55元/49624.05元=-2.996%\n隆元公告在1月4日打开了赎回,当天净值是1.071元/份!\n至此我的隆元封转开套利历时近二月(2007.11.6–2008.1.4),扣第一次赔的0.4%(手续费),7.1%-2.996%-0.4%=3.70,最终结果是赚3.7%\n再来看看同期上证综指表现:2007年11月6日:5536.53点,2008年1月4日:5361.57点,跌幅是-3.16%,参于隆元封转开套利可跑赢上证综指7.2%左右,我个人观点:一般来说股市每年年初都会有一波行情,一年之季在于春,一天之季在晨,股市里,第一季度就是股市的黄金季节而第一季度中的黄金时间就是春节前(2月7日), 同时也是为了图个喜庆,所以12月20日前后就可能会发动新一轮的行情,12月20日后大家就可满仓了, 既可买好的股票也可买基金(lof),买后就死捂不动,当然水平高的话也可满仓做短线杀来杀去, 反正是把能用的钱全用上,明年合理的年预期收益率是30%–50%,超过50%就算成功!所以在隆元打开赎回我没有我急于套现,我初步打算在2008年的一月底到而二月初时赎回隆元,先赚足我个人认为比较有把握的这段行情.</p>\n<p>(5)我的封转开第五单:封基景阳(500007),转,开基大成景阳(519019)\n大成景阳领先自2007年12月17日起开放集中申购,2008年1月11日集中申购工作顺利结束:本次集中申购有效净申购金额为4,857,506,129.68元人民币,20多天才募集到了４８．５7亿！太少了!老封基景阳拆分基准日:2008年1月17日,拆分基准日基金份额净值为3.979元,原基金景阳基金份额转型而得的10亿份基金份额转换为3,978,985,800份.原基金景阳转换为39.78亿份,新募集到了48.57亿,还没开始建仓,就快半仓了!看来不用一个月就要建仓完毕,打开赎回了,参于景阳封转开套利时,我已是轻车熟路了,就直接说一下结果了.</p>\n<p>封基景阳拆分基准日:2008年1月17日,拆分基准日基金份额净值为3.979元.\n2007年12月10日我是3.588元买的83300份景阳,,拆分后可得新开基大成景阳份额:3.979元/份×83300份=331450.7份\n我买入时投入的资金是:\n83300份×3.588元/份+83300份×3.588元/份×0.2%=299478.16元\n(备注:0.2%是买入封基时的单边网上交易手续费)\n到拆分日时我共赢利:331450.7份×1元/份-299478.16元=31972.54元\n赢利率:31972.54元/299478.16元=10.67%\n大成景阳公告在2008年2月5日打开了赎回,当天净值是0.961元/份!\n由于此时股市的中期调整还不充分.还存在回落的可能,同时大成基金信息披露很不规范,所以我没有象同德一样继续持有了一个多月,我选择了打开赎回的第一时间就获利了结,至此我的景阳封转开套利历时近二月(2007.12.10–2008.2.5),按2月5日净值0.961元/份赎回,再扣赎回时的0.5%的手续费,最终结果是赚5.79%,再来看看同期上证综指表现:2007年12月10日5161.92点,2008年2月5日:4599.70点,跌幅是-10.89%,参于景阳封转开套利可跑赢上证综指16.68%左右</p>\n<p>(6)封转开套利的一般流程:\n&lt;1&gt;先召集基金持有人开会,表决封转开\n&lt;2&gt;通过转型议案后,向上交所申请复牌\n&lt;3&gt;证券交易所核准基金终止上市,封基退市\n&lt;4&gt;正式转为开基并进行再扩募100亿–150亿\n&lt;5&gt;公告原封闭式基金的拆分日,然后新老资金和股票合并\n&lt;6&gt;进入封闭建仓期,最长不超过三个月,一般大约需1个月.\n&lt;7&gt;打开申购和赎回,可以赎回份额,资金到账</p>\n<p>至此封转开套利的程序结束,下面我就以500039基金同德(封闭式)为例来讲一下封转开的一般流程,大家先看一下同德的基本资料(大智慧里可按f10键)\n法定名称 同德证券投资基金\n基金代码 500039\n基金简称 基金同德\n基金总份额(万份) 50,000.00\n流通份额(万份) 49,750.00\n存续期限(年) 15年\n上市日期 2001-08-01\n成立日期 1992-12-01\n终止日期 2007-11-30</p>\n<p>&lt;1&gt;封转开的基金一般情况下,会在离终止日期前三个月就发出转型公告,先召开基金份额持有人大会.同时公告基金份额持有人的权益登记日\n例如:2007.08.13同德证券投资基金就发出了召开基金份额持有人大会公告,会议审议事项,关于同德证券投资基金转型有关事项的议案\n(一)会议召开时间:2007年9月13日上午9时30分\n(二)会议召开方式:现场方式\n(三)会议召开地点:世纪金源大饭店(北京市海淀区板井路69号)\n基金份额持有人的权益登记日，本次大会的权益登记日为2007年8月17日,即在2007年8月17日上海证券交易所(以下简称”上交所”)交易结束后,在中国证券登记结算有限责任公司(以下简称”中登公司”)上海分公司登记在册的基金同德全体基金份额持有人均有权参加本次基金份额持有人大会.\n(四)关于同德证券投资基金转型有关事项的议案应当由出席会议的基金份额持有人所持表决权的2/3(不含2/3)以上通过.才能确定转型初步成功,如果转型方案未获得持有人大会批准,基金管理人计划在30日内,按照有关规定重新向持有人大会提交转型方案议案.\n(五)本公告发布之日(2007 年8 月13日)基金停牌,并于下一个交易日(2007年8月14日)复牌.基金管理人将向上交所申请基金同德自2007 年8月20日开始停牌.基金管理人将于基金份额持有人大会决议公告后向上交所申请复牌.\n基金管理人将在基金份额持有人大会召开前发布提示性公告,就持有人大会相关情况做必要说明,请予以留意.因为2007年8月18日,19日为公休日,所以8月17日就是通德的最后一个交易日,然后就进入召开基金份额持有人大会,10月12日同德复盘,前后共用了55日,就是说近二月都在召集开会和上报转型的材料,具体过程为:2007-09-14关于同德证券投资基金基金份额持有人大会表决结果的公告,同德证券投资基金(以下简称”基金同德”)基金份额持有人大会已于2007年9月13日在北京召开.出席本次大会的基金同德基金份额持有人所持份额共计312,014,355份,占基金同德基金总份额5亿份的62.40%,达到法定开会条件,符合&lt;&lt;中华人民共和国证券投资基金法&gt;&gt;和&lt;&lt;同德证券投资基金基金合同&gt;&gt;的有关规定.会议审议了&lt;&lt;关于同德证券投资基金转型有关事项的议案&gt;&gt;(以下简称”本次会议议案”),并由出席大会的基金份额持有人对本次会议议案进行表决,表决结果为:312,014,355份基金份额同意,0份基金份额反对,0份基金份额弃权.同意本次会议议案的基金份额占出席本次大会的持有人所持份额的 100.00%,达到出席本次会议的基金份额持有人所持基金份额总数的三分之二以上,达到法定条件,符合&lt;&lt;中华人民共和国证券投资基金法&gt;&gt;和&lt;&lt;同德证券投资基金基金合同&gt;&gt;的有关规定,本次会议议案获得通过.\n本次会议结果将报送中国证券监督管理委员会予以核准.中国证券监督管理委员会核准前,基金同德将继续停牌.</p>\n<p>&lt;2&gt;2007年10月12日下午基金同德复牌,2007-10-12同德证券投资基金基金份额持有人大会决议公告\n中国证券监督管理委员会于2007年09月30日下发了&lt;&lt;关于核准同德证券投资基金基金份额持有人大会决议的批复&gt;&gt;(证监基金字[2007]273号),同意同德证券投资基金基金份额持有人大会决议生效.\n基金管理人已向上海证券交易所申请于2007年10月12日下午基金同德复牌,复牌后基金管理人将按照&lt;&lt;上海证券交易所证券投资基金上市规则&gt;&gt;、&lt;&lt;同德证券投资基金基金合同&gt;&gt;等的有关规定向上海证券交易所申请终止上市.上海证券交易所核准基金终止上市后,基金管理人将发布&lt;&lt;同德证券投资基金终止上市公告&gt;&gt;.\n关于长盛同德主题增长股票型证券投资基金集中申购的安排和原基金同德持有人的份额赎回,基金同德终止上市交易后,开始办理长盛同德主题增长股票型证券投资基金的集中申购.集中申购期结束后对原持有人的基金份额进行份额转换,在开放日常申购、赎回后,原基金同德持有人可办理份额赎回.</p>\n<p>&lt;3&gt;2007年10月25日500039基金同德终止上市\n基金简称:基金同德\n交易代码:500039\n基金类型:契约型封闭式基金\n终止上市日:2007年10月25日\n终止上市权利登记日:2007年10月24日,即在2007年10月24日下午上海证券交易所交易结束后,在中国证券登记结算有限责任公司上海分公司登记在册的本基金全体基金份额持有人享有基金同德终止上市后的相关权利.</p>\n<p>&lt;4&gt;自2007年10月26日起向全社会进行集中申购,截至2007年11月16日本基金集中申购工作顺利结束.集中申购的有效净申购金额为10,814,199,778.08元人民币,折合基金份额10,814,199,778.08份；</p>\n<p>&lt;5&gt;公告原封闭式基金500039同德的拆分日:2007年11月20日,新老资金和股票合并!\n基金份额转换基本情况\n(一)转换基准日\n2007年11月20日\n(二)转换对象\n2007年10月24日在中国证券登记结算有限责任公司上海分公司登记在册的基金同德基金份额.\n(三)转换日\n2007年11月21日\n(四)转换方式\n假设基金同德在转换基准日的基金份额净值为a元(精确到小数点后第7位),现以1:a的比例将基金财产进行转换,转换后,基金份额净值由原来的a元变为1.00元.相应地,基金份额增加到a倍,基金资产净值未发生变化.转换份额采用截尾的方式保留到整数,所产生的误差归入基金资产.\n例:某投资人账户持有100,000份基金同德基金份额,转换基准日基金同德基金份额净值为1.7654321元,则新基金份额为:\n新基金份额＝100,000×1.7654321=176,543份\n(五)转换结果公告日\n2007年11月23日</p>\n<p>&lt;6-7&gt;长盛同德基金于12月14日打开赎回业务,长盛同德主题增长基金将于12月21日起打开申购业务,,至此,经过一个月的建仓期,长盛同德这只”封转开”基金全面接受投资者的日常申购赎回”检阅”.</p>\n",
            "author": {
                "name": "ShaoXia"
            },
            "tags": [
                   "生活"
            ],
            "date_published": "2013-11-20T18:31:00+08:00",
            "date_modified": "2020-11-20T22:31:58+08:00"
        },
        {
            "id": "https://shaoxiaxl.github.io/blog/ren-de-yi-lian-lei-xing.html",
            "url": "https://shaoxiaxl.github.io/blog/ren-de-yi-lian-lei-xing.html",
            "title": "人的依恋类型",
            "summary": "依恋类型分为三种Secure（安全）、Anxious（焦虑）、Avoidant（回避）。Secure 的人容易接近恋人，对于依赖和被依赖感到舒服，不担心被抛弃也不担心被靠得太近。Anxious 的人觉得别人不愿意让他靠近到他想要的近距离，经常担心恋人是不是不爱自己或者不想跟自己在一起了。Avoidant 的人觉得跟别人距离太近会不舒服，难以完全信任别人也难以允许自己依赖别人。https://www.amazon.com/gp/product/B000Q9ENWQ/ref=as_li_ss_tl?ie=UTF8&amp;tag=baindo-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B000Q9ENWQ目标：双方Secure最常见的矛盾组合 一方 Anxious 另一方 Avoidant。Anxious 的一方总会觉得距离太远，想要靠近；Avoidant 的一方一旦被靠近了就觉得不舒服，然后想要回避。接着 Anxious 的一方会由于不满足而做出过激行为，希望以此来吸引对方的注意力，但 Avoidant 则觉得这正好印证了自己的观点——靠得太近会出问题，同时 Anxious 也会因为得不到关注而觉得这正好印证了自己的疑虑——对方可能不够爱我。勇气是可以训练出来的。很多很负面的感觉是错误的，只要你多尝试几次，发现失败了结果也不太糟糕，这些错误的负面感觉就会消失掉。然后就是一个纯粹的熟练程度训练啦。",
            "content_html": "<p>依恋类型分为三种Secure（安全）、Anxious（焦虑）、Avoidant（回避）。\nSecure 的人容易接近恋人，对于依赖和被依赖感到舒服，不担心被抛弃也不担心被靠得太近。\nAnxious 的人觉得别人不愿意让他靠近到他想要的近距离，经常担心恋人是不是不爱自己或者不想跟自己在一起了。\nAvoidant 的人觉得跟别人距离太近会不舒服，难以完全信任别人也难以允许自己依赖别人。\n<a href=\"https://www.amazon.com/gp/product/B000Q9ENWQ/ref=as_li_ss_tl?ie=UTF8&amp;tag=baindo-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B000Q9ENWQ\">https://www.amazon.com/gp/product/B000Q9ENWQ/ref=as_li_ss_tl?ie=UTF8&amp;tag=baindo-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B000Q9ENWQ</a>\n目标：\n双方Secure\n最常见的矛盾组合 一方 Anxious 另一方 Avoidant。Anxious 的一方总会觉得距离太远，想要靠近；Avoidant 的一方一旦被靠近了就觉得不舒服，然后想要回避。接着 Anxious 的一方会由于不满足而做出过激行为，希望以此来吸引对方的注意力，但 Avoidant 则觉得这正好印证了自己的观点——靠得太近会出问题，同时 Anxious 也会因为得不到关注而觉得这正好印证了自己的疑虑——对方可能不够爱我。\n勇气是可以训练出来的。很多很负面的感觉是错误的，只要你多尝试几次，发现失败了结果也不太糟糕，这些错误的负面感觉就会消失掉。然后就是一个纯粹的熟练程度训练啦。</p>\n",
            "author": {
                "name": "ShaoXia"
            },
            "tags": [
            ],
            "date_published": "2013-11-20T13:29:00+08:00",
            "date_modified": "2020-11-20T22:30:07+08:00"
        },
        {
            "id": "https://shaoxiaxl.github.io/blog/linux-xi-tong-chang-yong-ming-ling.html",
            "url": "https://shaoxiaxl.github.io/blog/linux-xi-tong-chang-yong-ming-ling.html",
            "title": "Linux系统常用命令",
            "summary": "查看当前的内存使用情况 free 连续监视内存使用情况 watch -d free 使用 Ctrl + c 退出 查看当前有哪些进程 ps -AFL 查看进程的启动时间 ps -A -opid,stime,etime,args 查看目前登入用户运行的程序 w 查看当前用户程序实际内存占用，并排序 ps -u $USER -o pid,rss,cmd –sort -rss 统计程序的内存耗用 ps -eo fname,rss|awk ‘{arr[$1]+=$2} END {for (i in arr) {print i,arr[i]}}’|sort -k2 -nr 按内存从大到小排列进程 ps -eo&hellip;",
            "content_html": "<p>查看当前的内存使用情况</p>\n<p><code>free</code></p>\n<p>连续监视内存使用情况</p>\n<p><code>watch  -d free</code></p>\n<p> 使用 <code>Ctrl + c</code> 退出</p>\n<p>查看当前有哪些进程</p>\n<p><code>ps -AFL</code></p>\n<p>查看进程的启动时间</p>\n<p><code>ps -A -opid,stime,etime,args</code></p>\n<p>查看目前登入用户运行的程序</p>\n<p><code>w</code></p>\n<p>查看当前用户程序实际内存占用，并排序</p>\n<p><code>ps -u $USER -o pid,rss,cmd –sort -rss</code></p>\n<p>统计程序的内存耗用</p>\n<p><code>ps -eo fname,rss|awk ‘{arr[$1]+=$2} END {for (i in arr) {print i,arr[i]}}’|sort -k2 -nr</code></p>\n<p>按内存从大到小排列进程</p>\n<p><code>ps -eo “%C  : %p : %z : %a”|sort -k5 -nr</code></p>\n<p>列出前十个最耗内存的进程</p>\n<p><code>ps aux | sort -nk +4 | tail</code></p>\n<p>按cpu利用率从大到小排列进程</p>\n<p><code>ps -eo “%C  : %p : %z : %a”|sort  -nr</code></p>\n<p><code>ps aux –sort -pcpu |head -n 20</code></p>\n<p>查看进程打开的文件</p>\n<p><code>lsof -p 进程的pid</code></p>\n<p>显示开启文件abc.txt的进程</p>\n<p><code>lsof abc.txt</code></p>\n<p>显示22端口现在运行什么程序</p>\n<p><code>lsof -i :22</code></p>\n<p>显示nsd进程现在打开的文件</p>\n<p><code>lsof -c nsd</code></p>\n<p>详细显示程序的运行信息</p>\n<p><code>strace -f -F -o outfile &lt;cmd&gt;</code></p>\n<p>增加系统最大打开文件个数</p>\n<p>`#ulimit -SHn</p>\n<p>sudo vim /etc/security/limits.conf`</p>\n<p>文件尾追加</p>\n<pre><code> hard nofile 4096\n\n soft nofile 4096\n\nsudo vim /etc/pam.d/su\n\n将 pam_limits.so 这一行注释去掉\n重起系统</code></pre><p>清除僵尸进程</p>\n<p><code>ps -eal | awk ‘{ if ($2 == “Z”) {print $4}}’ | xargs sudo kill -9</code></p>\n<p>将大于120M内存的php-cgi都杀掉</p>\n<p><code>ps -eo pid,fname,rss|grep php-cgi|grep -v grep|awk ‘{if($3&gt;=120000) print $1}’ | xargs sudo kill -9</code></p>\n<p>Linux系统中如何限制用户进程CPU占用率</p>\n<p><code>renice +10</code>ps aux | awk ‘{ if ($3 &gt; 0.8 &amp;&amp; id -u $1 &gt; 500) print $2}’``</p>\n<p>或直接编辑/etc/security/limits.conf文件</p>\n",
            "author": {
                "name": "ShaoXia"
            },
            "tags": [
            ],
            "date_published": "2013-08-26T23:23:00+08:00",
            "date_modified": "2020-11-20T22:28:25+08:00"
        }
    ]
}
